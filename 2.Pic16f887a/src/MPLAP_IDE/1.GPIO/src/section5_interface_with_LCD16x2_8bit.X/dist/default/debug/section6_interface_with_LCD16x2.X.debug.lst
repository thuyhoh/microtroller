

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Dec 20 17:33:56 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0008                     _PORTDbits	set	8
   172     0007                     _PORTC	set	7
   173     0088                     _TRISD	set	136
   174     0087                     _TRISC	set	135
   175                           
   176                           	psect	strings
   177     0003                     __pstrings:
   178     0003                     stringtab:
   179     0003                     __stringtab:
   180     0003                     stringcode:	
   181                           ;	String table - string pointers are 1 byte each
   182                           
   183     0003                     stringdir:
   184     0003  3000               	movlw	high stringdir
   185     0004  008A               	movwf	10
   186     0005  0804               	movf	4,w
   187     0006  0A84               	incf	4,f
   188     0007  0782               	addwf	2,f
   189     0008                     __stringbase:
   190     0008  3400               	retlw	0
   191     0009                     __end_of__stringtab:
   192     0009                     STR_2:
   193     0009  3461               	retlw	97	;'a'
   194     000A  3475               	retlw	117	;'u'
   195     000B  3474               	retlw	116	;'t'
   196     000C  3468               	retlw	104	;'h'
   197     000D  346F               	retlw	111	;'o'
   198     000E  3472               	retlw	114	;'r'
   199     000F  3420               	retlw	32	;' '
   200     0010  343A               	retlw	58	;':'
   201     0011  3420               	retlw	32	;' '
   202     0012  3454               	retlw	84	;'T'
   203     0013  3468               	retlw	104	;'h'
   204     0014  3475               	retlw	117	;'u'
   205     0015  3479               	retlw	121	;'y'
   206     0016  3400               	retlw	0
   207     0017                     STR_1:
   208     0017  3465               	retlw	101	;'e'
   209     0018  346D               	retlw	109	;'m'
   210     0019  3462               	retlw	98	;'b'
   211     001A  3465               	retlw	101	;'e'
   212     001B  3464               	retlw	100	;'d'
   213     001C  3464               	retlw	100	;'d'
   214     001D  3465               	retlw	101	;'e'
   215     001E  3464               	retlw	100	;'d'
   216     001F  3420               	retlw	32	;' '
   217     0020  3463               	retlw	99	;'c'
   218     0021  3400               	retlw	0
   219                           
   220                           	psect	cinit
   221     07FC                     start_initialization:	
   222                           ; #config settings
   223                           
   224     07FC                     __initialization:
   225     07FC                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228     07FC                     __end_of__initialization:
   229     07FC  0183               	clrf	3
   230     07FD  120A  118A  2FC3   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	cstackCOMMON
   233     0070                     __pcstackCOMMON:
   234     0070                     ?_lcd_data:
   235     0070                     ??_lcd_data:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ?_lcd_command:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ??_lcd_command:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ?_lcd_shilf_right:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_lcd_initialise:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255     0070                     	ds	2
   256     0072                     lcd_data@data:
   257     0072                     lcd_command@cmd:	
   258                           ; 1 bytes @ 0x2
   259                           
   260                           
   261                           ; 1 bytes @ 0x2
   262     0072                     	ds	1
   263     0073                     ?_lcd_string:
   264     0073                     ?_lcd_coursor:	
   265                           ; 1 bytes @ 0x3
   266                           
   267     0073                     ??_lcd_shilf_right:	
   268                           ; 1 bytes @ 0x3
   269                           
   270     0073                     ??_lcd_initialise:	
   271                           ; 1 bytes @ 0x3
   272                           
   273     0073                     lcd_string@n:	
   274                           ; 1 bytes @ 0x3
   275                           
   276     0073                     lcd_coursor@col:	
   277                           ; 1 bytes @ 0x3
   278                           
   279                           
   280                           ; 2 bytes @ 0x3
   281     0073                     	ds	1
   282     0074                     ??_lcd_string:
   283     0074                     lcd_string@str:	
   284                           ; 1 bytes @ 0x4
   285                           
   286                           
   287                           ; 1 bytes @ 0x4
   288     0074                     	ds	1
   289     0075                     lcd_string@i:
   290     0075                     lcd_coursor@row:	
   291                           ; 1 bytes @ 0x5
   292                           
   293                           
   294                           ; 2 bytes @ 0x5
   295     0075                     	ds	2
   296     0077                     ??_lcd_coursor:
   297     0077                     ??_main:	
   298                           ; 1 bytes @ 0x7
   299                           
   300                           
   301                           	psect	maintext
   302     07C3                     __pmaintext:	
   303                           ; 1 bytes @ 0x7
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 88 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         0       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0
   326 ;;      Totals:         0       0       0       0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels required when called: 2
   329 ;; This function calls:
   330 ;;		_lcd_coursor
   331 ;;		_lcd_initialise
   332 ;;		_lcd_shilf_right
   333 ;;		_lcd_string
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339     07C3                     _main:	
   340                           ;psect for function _main
   341                           
   342     07C3                     l666:	
   343                           ;incstack = 0
   344                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   345                           
   346                           
   347                           ;main.c: 90:     TRISC = 0x00;
   348     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   349     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   350     07C5  0187               	clrf	7	;volatile
   351                           
   352                           ;main.c: 91:     TRISD = 0x00;
   353     07C6  0188               	clrf	8	;volatile
   354     07C7                     l668:
   355                           
   356                           ;main.c: 92:     lcd_initialise();
   357     07C7  120A  118A  2773  120A  118A  	fcall	_lcd_initialise
   358     07CC                     l670:
   359                           
   360                           ;main.c: 94:         lcd_coursor(0,0);
   361     07CC  3000               	movlw	0
   362     07CD  00F3               	movwf	lcd_coursor@col
   363     07CE  00F4               	movwf	lcd_coursor@col+1
   364     07CF  3000               	movlw	0
   365     07D0  00F5               	movwf	lcd_coursor@row
   366     07D1  00F6               	movwf	lcd_coursor@row+1
   367     07D2  120A  118A  27A7  120A  118A  	fcall	_lcd_coursor
   368     07D7                     l672:
   369                           
   370                           ;main.c: 95:         lcd_shilf_right();
   371     07D7  120A  118A  2744  120A  118A  	fcall	_lcd_shilf_right
   372     07DC                     l674:
   373                           
   374                           ;main.c: 96:         lcd_string("embedded c",10);
   375     07DC  300A               	movlw	10
   376     07DD  00F3               	movwf	lcd_string@n
   377     07DE  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   378     07DF  120A  118A  278C  120A  118A  	fcall	_lcd_string
   379     07E4                     l676:
   380                           
   381                           ;main.c: 97:         lcd_coursor(0,1);
   382     07E4  3000               	movlw	0
   383     07E5  00F3               	movwf	lcd_coursor@col
   384     07E6  00F4               	movwf	lcd_coursor@col+1
   385     07E7  3001               	movlw	1
   386     07E8  00F5               	movwf	lcd_coursor@row
   387     07E9  3000               	movlw	0
   388     07EA  00F6               	movwf	lcd_coursor@row+1
   389     07EB  120A  118A  27A7  120A  118A  	fcall	_lcd_coursor
   390     07F0                     l678:
   391                           
   392                           ;main.c: 98:         lcd_string("author : Thuy",13);
   393     07F0  300D               	movlw	13
   394     07F1  00F3               	movwf	lcd_string@n
   395     07F2  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   396     07F3  120A  118A  278C  120A  118A  	fcall	_lcd_string
   397     07F8  2FCC               	goto	l670
   398     07F9  120A  118A  2800   	ljmp	start
   399     07FC                     __end_of_main:
   400                           
   401                           	psect	text1
   402     078C                     __ptext1:	
   403 ;; *************** function _lcd_string *****************
   404 ;; Defined at:
   405 ;;		line 53 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;  str             1    wreg     PTR unsigned char 
   408 ;;		 -> STR_2(14), STR_1(11), 
   409 ;;  n               1    3[COMMON] unsigned char 
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  str             1    4[COMMON] PTR unsigned char 
   412 ;;		 -> STR_2(14), STR_1(11), 
   413 ;;  i               1    5[COMMON] unsigned char 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         1       0       0       0       0
   424 ;;      Locals:         2       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0
   426 ;;      Totals:         3       0       0       0       0
   427 ;;Total ram usage:        3 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; Hardware stack levels required when called: 1
   430 ;; This function calls:
   431 ;;		_lcd_data
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437     078C                     _lcd_string:	
   438                           ;psect for function _lcd_string
   439                           
   440                           
   441                           ;incstack = 0
   442                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   443                           ;lcd_string@str stored from wreg
   444     078C  00F4               	movwf	lcd_string@str
   445     078D                     l650:
   446                           
   447                           ;main.c: 54:     unsigned char i;;main.c: 55:     for(i = 0; i< n; i++){
   448     078D  01F5               	clrf	lcd_string@i
   449     078E  2FA0               	goto	l656
   450     078F                     l652:
   451                           
   452                           ;main.c: 56:         lcd_data(str[i]);
   453     078F  0875               	movf	lcd_string@i,w
   454     0790  0774               	addwf	lcd_string@str,w
   455     0791  0084               	movwf	4
   456     0792  120A  118A  2003  120A  118A  	fcall	stringdir
   457     0797  120A  118A  275F  120A  118A  	fcall	_lcd_data
   458     079C                     l654:
   459                           
   460                           ;main.c: 57:     }
   461     079C  3001               	movlw	1
   462     079D  00FF               	movwf	btemp+1
   463     079E  087F               	movf	btemp+1,w
   464     079F  07F5               	addwf	lcd_string@i,f
   465     07A0                     l656:
   466     07A0  0873               	movf	lcd_string@n,w
   467     07A1  0275               	subwf	lcd_string@i,w
   468     07A2  1C03               	skipc
   469     07A3  2FA5               	goto	u41
   470     07A4  2FA6               	goto	u40
   471     07A5                     u41:
   472     07A5  2F8F               	goto	l652
   473     07A6                     u40:
   474     07A6                     l22:
   475     07A6  0008               	return
   476     07A7                     __end_of_lcd_string:
   477                           
   478                           	psect	text2
   479     075F                     __ptext2:	
   480 ;; *************** function _lcd_data *****************
   481 ;; Defined at:
   482 ;;		line 34 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  data            1    wreg     unsigned char 
   485 ;; Auto vars:     Size  Location     Type
   486 ;;  data            1    2[COMMON] unsigned char 
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         1       0       0       0       0
   498 ;;      Temps:          2       0       0       0       0
   499 ;;      Totals:         3       0       0       0       0
   500 ;;Total ram usage:        3 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_lcd_string
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509     075F                     _lcd_data:	
   510                           ;psect for function _lcd_data
   511                           
   512                           
   513                           ;incstack = 0
   514                           ; Regs used in _lcd_data: [wreg]
   515                           ;lcd_data@data stored from wreg
   516     075F  00F2               	movwf	lcd_data@data
   517     0760                     l592:
   518                           
   519                           ;main.c: 35:     PORTC = data;
   520     0760  0872               	movf	lcd_data@data,w
   521     0761  1283               	bcf	3,5	;RP0=0, select bank0
   522     0762  1303               	bcf	3,6	;RP1=0, select bank0
   523     0763  0087               	movwf	7	;volatile
   524     0764                     l594:
   525                           
   526                           ;main.c: 36:     PORTDbits.RD0 = 1;
   527     0764  1408               	bsf	8,0	;volatile
   528     0765                     l596:
   529                           
   530                           ;main.c: 37:     PORTDbits.RD2 = 0;
   531     0765  1108               	bcf	8,2	;volatile
   532     0766                     l598:
   533                           
   534                           ;main.c: 38:     PORTDbits.RD2 = 1;
   535     0766  1508               	bsf	8,2	;volatile
   536                           
   537                           ;main.c: 39:     _delay((unsigned long)((1)*(20000000/4000.0)));
   538     0767  3007               	movlw	7
   539     0768  00F1               	movwf	??_lcd_data+1
   540     0769  307D               	movlw	125
   541     076A  00F0               	movwf	??_lcd_data
   542     076B                     u77:
   543     076B  0BF0               	decfsz	??_lcd_data,f
   544     076C  2F6B               	goto	u77
   545     076D  0BF1               	decfsz	??_lcd_data+1,f
   546     076E  2F6B               	goto	u77
   547     076F                     l600:
   548                           
   549                           ;main.c: 40:     PORTDbits.RD2 = 0;
   550     076F  1283               	bcf	3,5	;RP0=0, select bank0
   551     0770  1303               	bcf	3,6	;RP1=0, select bank0
   552     0771  1108               	bcf	8,2	;volatile
   553     0772                     l13:
   554     0772  0008               	return
   555     0773                     __end_of_lcd_data:
   556                           
   557                           	psect	text3
   558     0744                     __ptext3:	
   559 ;; *************** function _lcd_shilf_right *****************
   560 ;; Defined at:
   561 ;;		line 76 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0, pclath, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; Hardware stack levels required when called: 1
   582 ;; This function calls:
   583 ;;		_lcd_command
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589     0744                     _lcd_shilf_right:	
   590                           ;psect for function _lcd_shilf_right
   591                           
   592     0744                     l628:	
   593                           ;incstack = 0
   594                           ; Regs used in _lcd_shilf_right: [wreg+status,2+status,0+pclath+cstack]
   595                           
   596                           
   597                           ;main.c: 77:     lcd_command(0x14);
   598     0744  3014               	movlw	20
   599     0745  120A  118A  274B  120A  118A  	fcall	_lcd_command
   600     074A                     l37:
   601     074A  0008               	return
   602     074B                     __end_of_lcd_shilf_right:
   603                           
   604                           	psect	text4
   605     0773                     __ptext4:	
   606 ;; *************** function _lcd_initialise *****************
   607 ;; Defined at:
   608 ;;		line 81 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 1
   629 ;; This function calls:
   630 ;;		_lcd_command
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636     0773                     _lcd_initialise:	
   637                           ;psect for function _lcd_initialise
   638                           
   639     0773                     l630:	
   640                           ;incstack = 0
   641                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   642                           
   643                           
   644                           ;main.c: 82:     lcd_command(0x38);
   645     0773  3038               	movlw	56
   646     0774  120A  118A  274B  120A  118A  	fcall	_lcd_command
   647                           
   648                           ;main.c: 83:     lcd_command(0x06);
   649     0779  3006               	movlw	6
   650     077A  120A  118A  274B  120A  118A  	fcall	_lcd_command
   651                           
   652                           ;main.c: 84:     lcd_command(0x0C);
   653     077F  300C               	movlw	12
   654     0780  120A  118A  274B  120A  118A  	fcall	_lcd_command
   655                           
   656                           ;main.c: 85:     lcd_command(0x81);
   657     0785  3081               	movlw	129
   658     0786  120A  118A  274B  120A  118A  	fcall	_lcd_command
   659     078B                     l40:
   660     078B  0008               	return
   661     078C                     __end_of_lcd_initialise:
   662                           
   663                           	psect	text5
   664     07A7                     __ptext5:	
   665 ;; *************** function _lcd_coursor *****************
   666 ;; Defined at:
   667 ;;		line 64 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  col             2    3[COMMON] unsigned int 
   670 ;;  row             2    5[COMMON] unsigned int 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, pclath, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         4       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0
   685 ;;      Totals:         4       0       0       0       0
   686 ;;Total ram usage:        4 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 1
   689 ;; This function calls:
   690 ;;		_lcd_command
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696     07A7                     _lcd_coursor:	
   697                           ;psect for function _lcd_coursor
   698                           
   699     07A7                     l658:	
   700                           ;incstack = 0
   701                           ; Regs used in _lcd_coursor: [wreg+status,2+status,0+pclath+cstack]
   702                           
   703                           
   704                           ;main.c: 65:     if(row == 0){
   705     07A7  0875               	movf	lcd_coursor@row,w
   706     07A8  0476               	iorwf	lcd_coursor@row+1,w
   707     07A9  1D03               	btfss	3,2
   708     07AA  2FAC               	goto	u51
   709     07AB  2FAD               	goto	u50
   710     07AC                     u51:
   711     07AC  2FB5               	goto	l662
   712     07AD                     u50:
   713     07AD                     l660:
   714                           
   715                           ;main.c: 66:         lcd_command(0x80+col);
   716     07AD  0873               	movf	lcd_coursor@col,w
   717     07AE  3E80               	addlw	128
   718     07AF  120A  118A  274B  120A  118A  	fcall	_lcd_command
   719                           
   720                           ;main.c: 67:     }else if(row == 1){
   721     07B4  2FC2               	goto	l31
   722     07B5                     l662:
   723     07B5  0375               	decf	lcd_coursor@row,w
   724     07B6  0476               	iorwf	lcd_coursor@row+1,w
   725     07B7  1D03               	btfss	3,2
   726     07B8  2FBA               	goto	u61
   727     07B9  2FBB               	goto	u60
   728     07BA                     u61:
   729     07BA  2FC2               	goto	l31
   730     07BB                     u60:
   731     07BB                     l664:
   732                           
   733                           ;main.c: 68:         lcd_command(0xC0+col);
   734     07BB  0873               	movf	lcd_coursor@col,w
   735     07BC  3EC0               	addlw	192
   736     07BD  120A  118A  274B  120A  118A  	fcall	_lcd_command
   737     07C2                     l31:
   738     07C2  0008               	return
   739     07C3                     __end_of_lcd_coursor:
   740                           
   741                           	psect	text6
   742     074B                     __ptext6:	
   743 ;; *************** function _lcd_command *****************
   744 ;; Defined at:
   745 ;;		line 44 in file "main.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  cmd             1    wreg     unsigned char 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  cmd             1    2[COMMON] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0
   761 ;;      Temps:          2       0       0       0       0
   762 ;;      Totals:         3       0       0       0       0
   763 ;;Total ram usage:        3 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_lcd_coursor
   769 ;;		_lcd_shilf_right
   770 ;;		_lcd_initialise
   771 ;;		_lcd_clear
   772 ;;		_lcd_shilf_left
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776     074B                     _lcd_command:	
   777                           ;psect for function _lcd_command
   778                           
   779                           
   780                           ;incstack = 0
   781                           ; Regs used in _lcd_command: [wreg]
   782                           ;lcd_command@cmd stored from wreg
   783     074B  00F2               	movwf	lcd_command@cmd
   784     074C                     l602:
   785                           
   786                           ;main.c: 45:     PORTC = cmd;
   787     074C  0872               	movf	lcd_command@cmd,w
   788     074D  1283               	bcf	3,5	;RP0=0, select bank0
   789     074E  1303               	bcf	3,6	;RP1=0, select bank0
   790     074F  0087               	movwf	7	;volatile
   791     0750                     l604:
   792                           
   793                           ;main.c: 46:     PORTDbits.RD0 = 0;
   794     0750  1008               	bcf	8,0	;volatile
   795     0751                     l606:
   796                           
   797                           ;main.c: 47:     PORTDbits.RD2 = 0;
   798     0751  1108               	bcf	8,2	;volatile
   799     0752                     l608:
   800                           
   801                           ;main.c: 48:     PORTDbits.RD2 = 1;
   802     0752  1508               	bsf	8,2	;volatile
   803                           
   804                           ;main.c: 49:     _delay((unsigned long)((1)*(20000000/4000.0)));
   805     0753  3007               	movlw	7
   806     0754  00F1               	movwf	??_lcd_command+1
   807     0755  307D               	movlw	125
   808     0756  00F0               	movwf	??_lcd_command
   809     0757                     u87:
   810     0757  0BF0               	decfsz	??_lcd_command,f
   811     0758  2F57               	goto	u87
   812     0759  0BF1               	decfsz	??_lcd_command+1,f
   813     075A  2F57               	goto	u87
   814     075B                     l610:
   815                           
   816                           ;main.c: 50:     PORTDbits.RD2 = 0;
   817     075B  1283               	bcf	3,5	;RP0=0, select bank0
   818     075C  1303               	bcf	3,6	;RP1=0, select bank0
   819     075D  1108               	bcf	8,2	;volatile
   820     075E                     l16:
   821     075E  0008               	return
   822     075F                     __end_of_lcd_command:
   823     007E                     btemp	set	126	;btemp
   824     007E                     wtemp0	set	126
   825                           
   826                           	psect	config
   827                           
   828                           ;Config register CONFIG @ 0x2007
   829                           ;	Oscillator Selection bits
   830                           ;	FOSC = HS, HS oscillator
   831                           ;	Watchdog Timer Enable bit
   832                           ;	WDTE = OFF, WDT disabled
   833                           ;	Power-up Timer Enable bit
   834                           ;	PWRTE = OFF, PWRT disabled
   835                           ;	Brown-out Reset Enable bit
   836                           ;	BOREN = ON, BOR enabled
   837                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   838                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   839                           ;	Data EEPROM Memory Code Protection bit
   840                           ;	CPD = OFF, Data EEPROM code protection off
   841                           ;	Flash Program Memory Write Enable bits
   842                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   843                           ;	In-Circuit Debugger Mode bit
   844                           ;	DEBUG = 0x1, unprogrammed default
   845                           ;	Flash Program Memory Code Protection bit
   846                           ;	CP = OFF, Code protection off
   847     2007                     	org	8199
   848     2007  3F7A               	dw	16250

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[11]), STR_2(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_lcd_coursor
    _lcd_string->_lcd_data
    _lcd_shilf_right->_lcd_command
    _lcd_initialise->_lcd_command
    _lcd_coursor->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     760
                        _lcd_coursor
                     _lcd_initialise
                    _lcd_shilf_right
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     2      1     323
                                              3 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_shilf_right                                      0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_coursor                                          4     0      4     407
                                              3 COMMON     4     0      4
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_coursor
     _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_shilf_right
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Dec 20 17:33:56 2023

                      pc 0002             lcd_data@data 0072                       l13 0772  
                     l22 07A6                       l31 07C2                       l16 075E  
                     l40 078B                       l37 074A                       u40 07A6  
                     u41 07A5                       u50 07AD                       u51 07AC  
                     u60 07BB                       u61 07BA                       u77 076B  
                     u87 0757                       fsr 0004                      l600 076F  
                    l610 075B                      l602 074C                      l604 0750  
                    l606 0751                      l630 0773                      l608 0752  
                    l650 078D                      l660 07AD                      l628 0744  
                    l652 078F                      l662 07B5                      l654 079C  
                    l670 07CC                      l664 07BB                      l592 0760  
                    l656 07A0                      l672 07D7                      l658 07A7  
                    l594 0764                      l674 07DC                      l666 07C3  
                    l596 0765                      l676 07E4                      l668 07C7  
                    l598 0766                      l678 07F0                      fsr0 0004  
                   STR_1 0017                     STR_2 0009                     _main 07C3  
                   btemp 007E                     start 0000              lcd_string@i 0075  
            lcd_string@n 0073         ?_lcd_shilf_right 0070                    ?_main 0070  
                  _PORTC 0007                    _TRISC 0087                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0077  
         lcd_command@cmd 0072         __end_of_lcd_data 0773           lcd_coursor@col 0073  
         lcd_coursor@row 0075         ??_lcd_initialise 0073            lcd_string@str 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07C3  
              ?_lcd_data 0070               _lcd_string 078C               __stringtab 0003  
                __ptext1 078C                  __ptext2 075F                  __ptext3 0744  
                __ptext4 0773                  __ptext5 07A7                  __ptext6 074B  
             ??_lcd_data 0070     end_of_initialization 07FC                _PORTDbits 0008  
            ?_lcd_string 0073            ??_lcd_command 0070            ??_lcd_coursor 0077  
    start_initialization 07FC        ??_lcd_shilf_right 0073      __end_of_lcd_command 075F  
    __end_of_lcd_coursor 07C3                ___latbits 0002                __pstrings 0003  
            _lcd_command 074B              _lcd_coursor 07A7              __stringbase 0008  
           ??_lcd_string 0074       __end_of_lcd_string 07A7       __end_of__stringtab 0009  
        _lcd_shilf_right 0744                 _lcd_data 075F           _lcd_initialise 0773  
 __end_of_lcd_initialise 078C                stringcode 0003  __end_of_lcd_shilf_right 074B  
               stringdir 0003                 stringtab 0003          ?_lcd_initialise 0070  
           ?_lcd_command 0070             ?_lcd_coursor 0073  
