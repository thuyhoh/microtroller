

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 21 08:35:47 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0006                     _PORTBbits	set	6
   172     0008                     _PORTDbits	set	8
   173     0007                     _PORTC	set	7
   174     0086                     _TRISB	set	134
   175     0088                     _TRISD	set	136
   176     0087                     _TRISC	set	135
   177                           
   178                           	psect	strings
   179     0003                     __pstrings:
   180     0003                     stringtab:
   181     0003                     __stringtab:
   182     0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185     0003                     stringdir:
   186     0003  3000               	movlw	high stringdir
   187     0004  008A               	movwf	10
   188     0005  0804               	movf	4,w
   189     0006  0A84               	incf	4,f
   190     0007  0782               	addwf	2,f
   191     0008                     __stringbase:
   192     0008  3400               	retlw	0
   193     0009                     __end_of__stringtab:
   194     0009                     STR_1:
   195     0009  346B               	retlw	107	;'k'
   196     000A  3465               	retlw	101	;'e'
   197     000B  3479               	retlw	121	;'y'
   198     000C  3470               	retlw	112	;'p'
   199     000D  3461               	retlw	97	;'a'
   200     000E  3464               	retlw	100	;'d'
   201     000F  343A               	retlw	58	;':'
   202     0010  3420               	retlw	32	;' '
   203     0011  3400               	retlw	0
   204                           
   205                           	psect	cinit
   206     07FC                     start_initialization:	
   207                           ; #config settings
   208                           
   209     07FC                     __initialization:
   210     07FC                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213     07FC                     __end_of__initialization:
   214     07FC  0183               	clrf	3
   215     07FD  120A  118A  2EFD   	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	cstackCOMMON
   218     0070                     __pcstackCOMMON:
   219     0070                     ?_lcd_data:
   220     0070                     ??_lcd_data:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ?_lcd_command:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ??_lcd_command:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ?_lcd_initialise:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ?_keypad:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?_main:	
   236                           ; 1 bytes @ 0x0
   237                           
   238                           
   239                           ; 1 bytes @ 0x0
   240     0070                     	ds	2
   241     0072                     lcd_data@data:
   242     0072                     lcd_command@cmd:	
   243                           ; 1 bytes @ 0x2
   244                           
   245                           
   246                           ; 1 bytes @ 0x2
   247     0072                     	ds	1
   248     0073                     ?_lcd_string:
   249     0073                     ?_lcd_coursor:	
   250                           ; 1 bytes @ 0x3
   251                           
   252     0073                     ??_lcd_initialise:	
   253                           ; 1 bytes @ 0x3
   254                           
   255     0073                     ??_keypad:	
   256                           ; 1 bytes @ 0x3
   257                           
   258     0073                     lcd_string@n:	
   259                           ; 1 bytes @ 0x3
   260                           
   261     0073                     lcd_coursor@col:	
   262                           ; 1 bytes @ 0x3
   263                           
   264                           
   265                           ; 2 bytes @ 0x3
   266     0073                     	ds	1
   267     0074                     ??_lcd_string:
   268     0074                     lcd_string@str:	
   269                           ; 1 bytes @ 0x4
   270                           
   271                           
   272                           ; 1 bytes @ 0x4
   273     0074                     	ds	1
   274     0075                     lcd_string@i:
   275     0075                     lcd_coursor@row:	
   276                           ; 1 bytes @ 0x5
   277                           
   278                           
   279                           ; 2 bytes @ 0x5
   280     0075                     	ds	2
   281     0077                     ??_lcd_coursor:
   282     0077                     ??_main:	
   283                           ; 1 bytes @ 0x7
   284                           
   285                           
   286                           	psect	maintext
   287     06FD                     __pmaintext:	
   288                           ; 1 bytes @ 0x7
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 159 in file "newmain.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels required when called: 2
   314 ;; This function calls:
   315 ;;		_keypad
   316 ;;		_lcd_coursor
   317 ;;		_lcd_initialise
   318 ;;		_lcd_string
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324     06FD                     _main:	
   325                           ;psect for function _main
   326                           
   327     06FD                     l747:	
   328                           ;incstack = 0
   329                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   330                           
   331                           
   332                           ;newmain.c: 161:     TRISC = 0x00;
   333     06FD  1683               	bsf	3,5	;RP0=1, select bank1
   334     06FE  1303               	bcf	3,6	;RP1=0, select bank1
   335     06FF  0187               	clrf	7	;volatile
   336                           
   337                           ;newmain.c: 162:     TRISD = 0x00;
   338     0700  0188               	clrf	8	;volatile
   339     0701                     l749:
   340                           
   341                           ;newmain.c: 163:     TRISB = 0xf0;
   342     0701  30F0               	movlw	240
   343     0702  0086               	movwf	6	;volatile
   344     0703                     l751:
   345                           
   346                           ;newmain.c: 164:     lcd_initialise();
   347     0703  120A  118A  26AD  120A  118A  	fcall	_lcd_initialise
   348     0708                     l753:
   349                           
   350                           ;newmain.c: 165:     lcd_coursor(0,0);
   351     0708  3000               	movlw	0
   352     0709  00F3               	movwf	lcd_coursor@col
   353     070A  00F4               	movwf	lcd_coursor@col+1
   354     070B  3000               	movlw	0
   355     070C  00F5               	movwf	lcd_coursor@row
   356     070D  00F6               	movwf	lcd_coursor@row+1
   357     070E  120A  118A  26E1  120A  118A  	fcall	_lcd_coursor
   358     0713                     l755:
   359                           
   360                           ;newmain.c: 166:     lcd_string("keypad: ",8);
   361     0713  3008               	movlw	8
   362     0714  00F3               	movwf	lcd_string@n
   363     0715  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   364     0716  120A  118A  26C6  120A  118A  	fcall	_lcd_string
   365     071B                     l757:
   366                           
   367                           ;newmain.c: 167:     lcd_coursor(0,1);
   368     071B  3000               	movlw	0
   369     071C  00F3               	movwf	lcd_coursor@col
   370     071D  00F4               	movwf	lcd_coursor@col+1
   371     071E  3001               	movlw	1
   372     071F  00F5               	movwf	lcd_coursor@row
   373     0720  3000               	movlw	0
   374     0721  00F6               	movwf	lcd_coursor@row+1
   375     0722  120A  118A  26E1  120A  118A  	fcall	_lcd_coursor
   376     0727                     l759:
   377                           
   378                           ;newmain.c: 169:         keypad();
   379     0727  120A  118A  2730  120A  118A  	fcall	_keypad
   380     072C  2F27               	goto	l759
   381     072D  120A  118A  2800   	ljmp	start
   382     0730                     __end_of_main:
   383                           
   384                           	psect	text1
   385     06C6                     __ptext1:	
   386 ;; *************** function _lcd_string *****************
   387 ;; Defined at:
   388 ;;		line 61 in file "newmain.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;  str             1    wreg     PTR unsigned char 
   391 ;;		 -> STR_1(9), 
   392 ;;  n               1    3[COMMON] unsigned char 
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  str             1    4[COMMON] PTR unsigned char 
   395 ;;		 -> STR_1(9), 
   396 ;;  i               1    5[COMMON] unsigned char 
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         1       0       0       0       0
   407 ;;      Locals:         2       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0
   409 ;;      Totals:         3       0       0       0       0
   410 ;;Total ram usage:        3 bytes
   411 ;; Hardware stack levels used: 1
   412 ;; Hardware stack levels required when called: 1
   413 ;; This function calls:
   414 ;;		_lcd_data
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420     06C6                     _lcd_string:	
   421                           ;psect for function _lcd_string
   422                           
   423                           
   424                           ;incstack = 0
   425                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   426                           ;lcd_string@str stored from wreg
   427     06C6  00F4               	movwf	lcd_string@str
   428     06C7                     l731:
   429                           
   430                           ;newmain.c: 62:     unsigned char i;;newmain.c: 63:     for(i = 0; i< n; i++){
   431     06C7  01F5               	clrf	lcd_string@i
   432     06C8  2EDA               	goto	l737
   433     06C9                     l733:
   434                           
   435                           ;newmain.c: 64:         lcd_data(str[i]);
   436     06C9  0875               	movf	lcd_string@i,w
   437     06CA  0774               	addwf	lcd_string@str,w
   438     06CB  0084               	movwf	4
   439     06CC  120A  118A  2003  120A  118A  	fcall	stringdir
   440     06D1  120A  118A  2685  120A  118A  	fcall	_lcd_data
   441     06D6                     l735:
   442                           
   443                           ;newmain.c: 65:     }
   444     06D6  3001               	movlw	1
   445     06D7  00FF               	movwf	btemp+1
   446     06D8  087F               	movf	btemp+1,w
   447     06D9  07F5               	addwf	lcd_string@i,f
   448     06DA                     l737:
   449     06DA  0873               	movf	lcd_string@n,w
   450     06DB  0275               	subwf	lcd_string@i,w
   451     06DC  1C03               	skipc
   452     06DD  2EDF               	goto	u281
   453     06DE  2EE0               	goto	u280
   454     06DF                     u281:
   455     06DF  2EC9               	goto	l733
   456     06E0                     u280:
   457     06E0                     l26:
   458     06E0  0008               	return
   459     06E1                     __end_of_lcd_string:
   460                           
   461                           	psect	text2
   462     06AD                     __ptext2:	
   463 ;; *************** function _lcd_initialise *****************
   464 ;; Defined at:
   465 ;;		line 89 in file "newmain.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, status,2, status,0, pclath, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   479 ;;      Params:         0       0       0       0       0
   480 ;;      Locals:         0       0       0       0       0
   481 ;;      Temps:          0       0       0       0       0
   482 ;;      Totals:         0       0       0       0       0
   483 ;;Total ram usage:        0 bytes
   484 ;; Hardware stack levels used: 1
   485 ;; Hardware stack levels required when called: 1
   486 ;; This function calls:
   487 ;;		_lcd_command
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493     06AD                     _lcd_initialise:	
   494                           ;psect for function _lcd_initialise
   495                           
   496     06AD                     l683:	
   497                           ;incstack = 0
   498                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   499                           
   500                           
   501                           ;newmain.c: 90:     lcd_command(0x38);
   502     06AD  3038               	movlw	56
   503     06AE  120A  118A  2699  120A  118A  	fcall	_lcd_command
   504                           
   505                           ;newmain.c: 91:     lcd_command(0x06);
   506     06B3  3006               	movlw	6
   507     06B4  120A  118A  2699  120A  118A  	fcall	_lcd_command
   508                           
   509                           ;newmain.c: 92:     lcd_command(0x0C);
   510     06B9  300C               	movlw	12
   511     06BA  120A  118A  2699  120A  118A  	fcall	_lcd_command
   512                           
   513                           ;newmain.c: 93:     lcd_command(0x81);
   514     06BF  3081               	movlw	129
   515     06C0  120A  118A  2699  120A  118A  	fcall	_lcd_command
   516     06C5                     l44:
   517     06C5  0008               	return
   518     06C6                     __end_of_lcd_initialise:
   519                           
   520                           	psect	text3
   521     06E1                     __ptext3:	
   522 ;; *************** function _lcd_coursor *****************
   523 ;; Defined at:
   524 ;;		line 72 in file "newmain.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  col             2    3[COMMON] unsigned int 
   527 ;;  row             2    5[COMMON] unsigned int 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         4       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         4       0       0       0       0
   543 ;;Total ram usage:        4 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 1
   546 ;; This function calls:
   547 ;;		_lcd_command
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     06E1                     _lcd_coursor:	
   554                           ;psect for function _lcd_coursor
   555                           
   556     06E1                     l739:	
   557                           ;incstack = 0
   558                           ; Regs used in _lcd_coursor: [wreg+status,2+status,0+pclath+cstack]
   559                           
   560                           
   561                           ;newmain.c: 73:     if(row == 0){
   562     06E1  0875               	movf	lcd_coursor@row,w
   563     06E2  0476               	iorwf	lcd_coursor@row+1,w
   564     06E3  1D03               	btfss	3,2
   565     06E4  2EE6               	goto	u291
   566     06E5  2EE7               	goto	u290
   567     06E6                     u291:
   568     06E6  2EEF               	goto	l743
   569     06E7                     u290:
   570     06E7                     l741:
   571                           
   572                           ;newmain.c: 74:         lcd_command(0x80+col);
   573     06E7  0873               	movf	lcd_coursor@col,w
   574     06E8  3E80               	addlw	128
   575     06E9  120A  118A  2699  120A  118A  	fcall	_lcd_command
   576                           
   577                           ;newmain.c: 75:     }else if(row == 1){
   578     06EE  2EFC               	goto	l35
   579     06EF                     l743:
   580     06EF  0375               	decf	lcd_coursor@row,w
   581     06F0  0476               	iorwf	lcd_coursor@row+1,w
   582     06F1  1D03               	btfss	3,2
   583     06F2  2EF4               	goto	u301
   584     06F3  2EF5               	goto	u300
   585     06F4                     u301:
   586     06F4  2EFC               	goto	l35
   587     06F5                     u300:
   588     06F5                     l745:
   589                           
   590                           ;newmain.c: 76:         lcd_command(0xC0+col);
   591     06F5  0873               	movf	lcd_coursor@col,w
   592     06F6  3EC0               	addlw	192
   593     06F7  120A  118A  2699  120A  118A  	fcall	_lcd_command
   594     06FC                     l35:
   595     06FC  0008               	return
   596     06FD                     __end_of_lcd_coursor:
   597                           
   598                           	psect	text4
   599     0699                     __ptext4:	
   600 ;; *************** function _lcd_command *****************
   601 ;; Defined at:
   602 ;;		line 52 in file "newmain.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  cmd             1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  cmd             1    2[COMMON] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0
   618 ;;      Temps:          2       0       0       0       0
   619 ;;      Totals:         3       0       0       0       0
   620 ;;Total ram usage:        3 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_lcd_coursor
   626 ;;		_lcd_initialise
   627 ;;		_lcd_clear
   628 ;;		_lcd_shilf_left
   629 ;;		_lcd_shilf_right
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633     0699                     _lcd_command:	
   634                           ;psect for function _lcd_command
   635                           
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _lcd_command: [wreg]
   639                           ;lcd_command@cmd stored from wreg
   640     0699  00F2               	movwf	lcd_command@cmd
   641     069A                     l657:
   642                           
   643                           ;newmain.c: 53:     PORTC = cmd;
   644     069A  0872               	movf	lcd_command@cmd,w
   645     069B  1283               	bcf	3,5	;RP0=0, select bank0
   646     069C  1303               	bcf	3,6	;RP1=0, select bank0
   647     069D  0087               	movwf	7	;volatile
   648     069E                     l659:
   649                           
   650                           ;newmain.c: 54:     PORTDbits.RD0 = 0;
   651     069E  1008               	bcf	8,0	;volatile
   652     069F                     l661:
   653                           
   654                           ;newmain.c: 55:     PORTDbits.RD2 = 0;
   655     069F  1108               	bcf	8,2	;volatile
   656     06A0                     l663:
   657                           
   658                           ;newmain.c: 56:     PORTDbits.RD2 = 1;
   659     06A0  1508               	bsf	8,2	;volatile
   660                           
   661                           ;newmain.c: 57:     _delay((unsigned long)((1)*(20000000/4000.0)));
   662     06A1  3007               	movlw	7
   663     06A2  00F1               	movwf	??_lcd_command+1
   664     06A3  307D               	movlw	125
   665     06A4  00F0               	movwf	??_lcd_command
   666     06A5                     u317:
   667     06A5  0BF0               	decfsz	??_lcd_command,f
   668     06A6  2EA5               	goto	u317
   669     06A7  0BF1               	decfsz	??_lcd_command+1,f
   670     06A8  2EA5               	goto	u317
   671     06A9                     l665:
   672                           
   673                           ;newmain.c: 58:     PORTDbits.RD2 = 0;
   674     06A9  1283               	bcf	3,5	;RP0=0, select bank0
   675     06AA  1303               	bcf	3,6	;RP1=0, select bank0
   676     06AB  1108               	bcf	8,2	;volatile
   677     06AC                     l20:
   678     06AC  0008               	return
   679     06AD                     __end_of_lcd_command:
   680                           
   681                           	psect	text5
   682     0730                     __ptext5:	
   683 ;; *************** function _keypad *****************
   684 ;; Defined at:
   685 ;;		line 96 in file "newmain.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0
   702 ;;      Totals:         0       0       0       0       0
   703 ;;Total ram usage:        0 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; Hardware stack levels required when called: 1
   706 ;; This function calls:
   707 ;;		_lcd_data
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713     0730                     _keypad:	
   714                           ;psect for function _keypad
   715                           
   716     0730                     l685:	
   717                           ;incstack = 0
   718                           ; Regs used in _keypad: [wreg+status,2+status,0+pclath+cstack]
   719                           
   720                           
   721                           ;newmain.c: 97:     PORTBbits.RB0 = 1;
   722     0730  1283               	bcf	3,5	;RP0=0, select bank0
   723     0731  1303               	bcf	3,6	;RP1=0, select bank0
   724     0732  1406               	bsf	6,0	;volatile
   725                           
   726                           ;newmain.c: 98:     PORTBbits.RB1 = 0;
   727     0733  1086               	bcf	6,1	;volatile
   728                           
   729                           ;newmain.c: 99:     PORTBbits.RB2 = 0;
   730     0734  1106               	bcf	6,2	;volatile
   731                           
   732                           ;newmain.c: 100:     if(PORTBbits.RB4 ==1){
   733     0735  1E06               	btfss	6,4	;volatile
   734     0736  2F38               	goto	u41
   735     0737  2F39               	goto	u40
   736     0738                     u41:
   737     0738  2F45               	goto	l47
   738     0739                     u40:
   739     0739                     l687:
   740                           
   741                           ;newmain.c: 101:         lcd_data('1');
   742     0739  3031               	movlw	49
   743     073A  120A  118A  2685  120A  118A  	fcall	_lcd_data
   744     073F                     l48:	
   745                           ;newmain.c: 102:         while(PORTBbits.RB4==1);
   746                           
   747     073F  1283               	bcf	3,5	;RP0=0, select bank0
   748     0740  1303               	bcf	3,6	;RP1=0, select bank0
   749     0741  1A06               	btfsc	6,4	;volatile
   750     0742  2F44               	goto	u51
   751     0743  2F45               	goto	u50
   752     0744                     u51:
   753     0744  2F3F               	goto	l48
   754     0745                     u50:
   755     0745                     l47:	
   756                           ;newmain.c: 103:     }
   757                           
   758                           
   759                           ;newmain.c: 104:     if(PORTBbits.RB5 ==1){
   760     0745  1E86               	btfss	6,5	;volatile
   761     0746  2F48               	goto	u61
   762     0747  2F49               	goto	u60
   763     0748                     u61:
   764     0748  2F55               	goto	l51
   765     0749                     u60:
   766     0749                     l689:
   767                           
   768                           ;newmain.c: 105:         lcd_data('4');
   769     0749  3034               	movlw	52
   770     074A  120A  118A  2685  120A  118A  	fcall	_lcd_data
   771     074F                     l52:	
   772                           ;newmain.c: 106:         while(PORTBbits.RB5==1);
   773                           
   774     074F  1283               	bcf	3,5	;RP0=0, select bank0
   775     0750  1303               	bcf	3,6	;RP1=0, select bank0
   776     0751  1A86               	btfsc	6,5	;volatile
   777     0752  2F54               	goto	u71
   778     0753  2F55               	goto	u70
   779     0754                     u71:
   780     0754  2F4F               	goto	l52
   781     0755                     u70:
   782     0755                     l51:	
   783                           ;newmain.c: 108:     }
   784                           
   785                           
   786                           ;newmain.c: 109:     if(PORTBbits.RB6 ==1){
   787     0755  1F06               	btfss	6,6	;volatile
   788     0756  2F58               	goto	u81
   789     0757  2F59               	goto	u80
   790     0758                     u81:
   791     0758  2F65               	goto	l55
   792     0759                     u80:
   793     0759                     l691:
   794                           
   795                           ;newmain.c: 110:         lcd_data('7');
   796     0759  3037               	movlw	55
   797     075A  120A  118A  2685  120A  118A  	fcall	_lcd_data
   798     075F                     l56:	
   799                           ;newmain.c: 111:         while(PORTBbits.RB6 == 1);
   800                           
   801     075F  1283               	bcf	3,5	;RP0=0, select bank0
   802     0760  1303               	bcf	3,6	;RP1=0, select bank0
   803     0761  1B06               	btfsc	6,6	;volatile
   804     0762  2F64               	goto	u91
   805     0763  2F65               	goto	u90
   806     0764                     u91:
   807     0764  2F5F               	goto	l56
   808     0765                     u90:
   809     0765                     l55:	
   810                           ;newmain.c: 112:     }
   811                           
   812                           
   813                           ;newmain.c: 113:     if(PORTBbits.RB7 ==1){
   814     0765  1F86               	btfss	6,7	;volatile
   815     0766  2F68               	goto	u101
   816     0767  2F69               	goto	u100
   817     0768                     u101:
   818     0768  2F75               	goto	l59
   819     0769                     u100:
   820     0769                     l693:
   821                           
   822                           ;newmain.c: 114:         lcd_data('*');
   823     0769  302A               	movlw	42
   824     076A  120A  118A  2685  120A  118A  	fcall	_lcd_data
   825     076F                     l60:	
   826                           ;newmain.c: 115:         while(PORTBbits.RB7 == 1);
   827                           
   828     076F  1283               	bcf	3,5	;RP0=0, select bank0
   829     0770  1303               	bcf	3,6	;RP1=0, select bank0
   830     0771  1B86               	btfsc	6,7	;volatile
   831     0772  2F74               	goto	u111
   832     0773  2F75               	goto	u110
   833     0774                     u111:
   834     0774  2F6F               	goto	l60
   835     0775                     u110:
   836     0775                     l59:	
   837                           ;newmain.c: 116:     }
   838                           
   839                           
   840                           ;newmain.c: 118:     PORTBbits.RB0 = 0;
   841     0775  1006               	bcf	6,0	;volatile
   842                           
   843                           ;newmain.c: 119:     PORTBbits.RB1 = 1;
   844     0776  1486               	bsf	6,1	;volatile
   845                           
   846                           ;newmain.c: 120:     PORTBbits.RB2 = 0;
   847     0777  1106               	bcf	6,2	;volatile
   848                           
   849                           ;newmain.c: 121:     if(PORTBbits.RB4 ==1){
   850     0778  1E06               	btfss	6,4	;volatile
   851     0779  2F7B               	goto	u121
   852     077A  2F7C               	goto	u120
   853     077B                     u121:
   854     077B  2F88               	goto	l63
   855     077C                     u120:
   856     077C                     l695:
   857                           
   858                           ;newmain.c: 122:         lcd_data('2');
   859     077C  3032               	movlw	50
   860     077D  120A  118A  2685  120A  118A  	fcall	_lcd_data
   861     0782                     l64:	
   862                           ;newmain.c: 123:         while(PORTBbits.RB4 == 1);
   863                           
   864     0782  1283               	bcf	3,5	;RP0=0, select bank0
   865     0783  1303               	bcf	3,6	;RP1=0, select bank0
   866     0784  1A06               	btfsc	6,4	;volatile
   867     0785  2F87               	goto	u131
   868     0786  2F88               	goto	u130
   869     0787                     u131:
   870     0787  2F82               	goto	l64
   871     0788                     u130:
   872     0788                     l63:	
   873                           ;newmain.c: 124:     }
   874                           
   875                           
   876                           ;newmain.c: 125:     if(PORTBbits.RB5 ==1){
   877     0788  1E86               	btfss	6,5	;volatile
   878     0789  2F8B               	goto	u141
   879     078A  2F8C               	goto	u140
   880     078B                     u141:
   881     078B  2F98               	goto	l67
   882     078C                     u140:
   883     078C                     l697:
   884                           
   885                           ;newmain.c: 126:         lcd_data('5');
   886     078C  3035               	movlw	53
   887     078D  120A  118A  2685  120A  118A  	fcall	_lcd_data
   888     0792                     l68:	
   889                           ;newmain.c: 127:         while(PORTBbits.RB5== 1);
   890                           
   891     0792  1283               	bcf	3,5	;RP0=0, select bank0
   892     0793  1303               	bcf	3,6	;RP1=0, select bank0
   893     0794  1A86               	btfsc	6,5	;volatile
   894     0795  2F97               	goto	u151
   895     0796  2F98               	goto	u150
   896     0797                     u151:
   897     0797  2F92               	goto	l68
   898     0798                     u150:
   899     0798                     l67:	
   900                           ;newmain.c: 128:     }
   901                           
   902                           
   903                           ;newmain.c: 129:     if(PORTBbits.RB6 ==1){
   904     0798  1F06               	btfss	6,6	;volatile
   905     0799  2F9B               	goto	u161
   906     079A  2F9C               	goto	u160
   907     079B                     u161:
   908     079B  2FA8               	goto	l71
   909     079C                     u160:
   910     079C                     l699:
   911                           
   912                           ;newmain.c: 130:         lcd_data('8');
   913     079C  3038               	movlw	56
   914     079D  120A  118A  2685  120A  118A  	fcall	_lcd_data
   915     07A2                     l72:	
   916                           ;newmain.c: 131:         while(PORTBbits.RB6 == 1);
   917                           
   918     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   919     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   920     07A4  1B06               	btfsc	6,6	;volatile
   921     07A5  2FA7               	goto	u171
   922     07A6  2FA8               	goto	u170
   923     07A7                     u171:
   924     07A7  2FA2               	goto	l72
   925     07A8                     u170:
   926     07A8                     l71:	
   927                           ;newmain.c: 132:     }
   928                           
   929                           
   930                           ;newmain.c: 133:     if(PORTBbits.RB7 ==1){
   931     07A8  1F86               	btfss	6,7	;volatile
   932     07A9  2FAB               	goto	u181
   933     07AA  2FAC               	goto	u180
   934     07AB                     u181:
   935     07AB  2FB8               	goto	l75
   936     07AC                     u180:
   937     07AC                     l701:
   938                           
   939                           ;newmain.c: 134:         lcd_data('0');
   940     07AC  3030               	movlw	48
   941     07AD  120A  118A  2685  120A  118A  	fcall	_lcd_data
   942     07B2                     l76:	
   943                           ;newmain.c: 135:         while(PORTBbits.RB7 == 1);
   944                           
   945     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   946     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   947     07B4  1B86               	btfsc	6,7	;volatile
   948     07B5  2FB7               	goto	u191
   949     07B6  2FB8               	goto	u190
   950     07B7                     u191:
   951     07B7  2FB2               	goto	l76
   952     07B8                     u190:
   953     07B8                     l75:	
   954                           ;newmain.c: 136:     }
   955                           
   956                           
   957                           ;newmain.c: 138:     PORTBbits.RB0 = 0;
   958     07B8  1006               	bcf	6,0	;volatile
   959                           
   960                           ;newmain.c: 139:     PORTBbits.RB1 = 0;
   961     07B9  1086               	bcf	6,1	;volatile
   962                           
   963                           ;newmain.c: 140:     PORTBbits.RB2 = 1;
   964     07BA  1506               	bsf	6,2	;volatile
   965                           
   966                           ;newmain.c: 141:     if(PORTBbits.RB4 ==1){
   967     07BB  1E06               	btfss	6,4	;volatile
   968     07BC  2FBE               	goto	u201
   969     07BD  2FBF               	goto	u200
   970     07BE                     u201:
   971     07BE  2FCB               	goto	l79
   972     07BF                     u200:
   973     07BF                     l703:
   974                           
   975                           ;newmain.c: 142:         lcd_data('3');
   976     07BF  3033               	movlw	51
   977     07C0  120A  118A  2685  120A  118A  	fcall	_lcd_data
   978     07C5                     l80:	
   979                           ;newmain.c: 143:         while(PORTBbits.RB4 == 1);
   980                           
   981     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   982     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   983     07C7  1A06               	btfsc	6,4	;volatile
   984     07C8  2FCA               	goto	u211
   985     07C9  2FCB               	goto	u210
   986     07CA                     u211:
   987     07CA  2FC5               	goto	l80
   988     07CB                     u210:
   989     07CB                     l79:	
   990                           ;newmain.c: 144:     }
   991                           
   992                           
   993                           ;newmain.c: 145:     if(PORTBbits.RB5 ==1){
   994     07CB  1E86               	btfss	6,5	;volatile
   995     07CC  2FCE               	goto	u221
   996     07CD  2FCF               	goto	u220
   997     07CE                     u221:
   998     07CE  2FDB               	goto	l83
   999     07CF                     u220:
  1000     07CF                     l705:
  1001                           
  1002                           ;newmain.c: 146:         lcd_data('6');
  1003     07CF  3036               	movlw	54
  1004     07D0  120A  118A  2685  120A  118A  	fcall	_lcd_data
  1005     07D5                     l84:	
  1006                           ;newmain.c: 147:         while(PORTBbits.RB5 == 1);
  1007                           
  1008     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1009     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1010     07D7  1A86               	btfsc	6,5	;volatile
  1011     07D8  2FDA               	goto	u231
  1012     07D9  2FDB               	goto	u230
  1013     07DA                     u231:
  1014     07DA  2FD5               	goto	l84
  1015     07DB                     u230:
  1016     07DB                     l83:	
  1017                           ;newmain.c: 148:     }
  1018                           
  1019                           
  1020                           ;newmain.c: 149:     if(PORTBbits.RB6 ==1){
  1021     07DB  1F06               	btfss	6,6	;volatile
  1022     07DC  2FDE               	goto	u241
  1023     07DD  2FDF               	goto	u240
  1024     07DE                     u241:
  1025     07DE  2FEB               	goto	l87
  1026     07DF                     u240:
  1027     07DF                     l707:
  1028                           
  1029                           ;newmain.c: 150:         lcd_data('9');
  1030     07DF  3039               	movlw	57
  1031     07E0  120A  118A  2685  120A  118A  	fcall	_lcd_data
  1032     07E5                     l88:	
  1033                           ;newmain.c: 151:         while(PORTBbits.RB6 == 1);
  1034                           
  1035     07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1036     07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1037     07E7  1B06               	btfsc	6,6	;volatile
  1038     07E8  2FEA               	goto	u251
  1039     07E9  2FEB               	goto	u250
  1040     07EA                     u251:
  1041     07EA  2FE5               	goto	l88
  1042     07EB                     u250:
  1043     07EB                     l87:	
  1044                           ;newmain.c: 152:     }
  1045                           
  1046                           
  1047                           ;newmain.c: 153:     if(PORTBbits.RB7 ==1){
  1048     07EB  1F86               	btfss	6,7	;volatile
  1049     07EC  2FEE               	goto	u261
  1050     07ED  2FEF               	goto	u260
  1051     07EE                     u261:
  1052     07EE  2FFB               	goto	l95
  1053     07EF                     u260:
  1054     07EF                     l709:
  1055                           
  1056                           ;newmain.c: 154:         lcd_data('#');
  1057     07EF  3023               	movlw	35
  1058     07F0  120A  118A  2685  120A  118A  	fcall	_lcd_data
  1059     07F5                     l92:	
  1060                           ;newmain.c: 155:         while(PORTBbits.RB7 == 1);
  1061                           
  1062     07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1063     07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1064     07F7  1B86               	btfsc	6,7	;volatile
  1065     07F8  2FFA               	goto	u271
  1066     07F9  2FFB               	goto	u270
  1067     07FA                     u271:
  1068     07FA  2FF5               	goto	l92
  1069     07FB                     u270:
  1070     07FB                     l95:
  1071     07FB  0008               	return
  1072     07FC                     __end_of_keypad:
  1073                           
  1074                           	psect	text6
  1075     0685                     __ptext6:	
  1076 ;; *************** function _lcd_data *****************
  1077 ;; Defined at:
  1078 ;;		line 42 in file "newmain.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  data            1    wreg     unsigned char 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  data            1    2[COMMON] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         1       0       0       0       0
  1094 ;;      Temps:          2       0       0       0       0
  1095 ;;      Totals:         3       0       0       0       0
  1096 ;;Total ram usage:        3 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_lcd_string
  1102 ;;		_keypad
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106     0685                     _lcd_data:	
  1107                           ;psect for function _lcd_data
  1108                           
  1109                           
  1110                           ;incstack = 0
  1111                           ; Regs used in _lcd_data: [wreg]
  1112                           ;lcd_data@data stored from wreg
  1113     0685  00F2               	movwf	lcd_data@data
  1114     0686                     l647:
  1115                           
  1116                           ;newmain.c: 43:     PORTC = data;
  1117     0686  0872               	movf	lcd_data@data,w
  1118     0687  1283               	bcf	3,5	;RP0=0, select bank0
  1119     0688  1303               	bcf	3,6	;RP1=0, select bank0
  1120     0689  0087               	movwf	7	;volatile
  1121     068A                     l649:
  1122                           
  1123                           ;newmain.c: 44:     PORTDbits.RD0 = 1;
  1124     068A  1408               	bsf	8,0	;volatile
  1125     068B                     l651:
  1126                           
  1127                           ;newmain.c: 45:     PORTDbits.RD2 = 0;
  1128     068B  1108               	bcf	8,2	;volatile
  1129     068C                     l653:
  1130                           
  1131                           ;newmain.c: 46:     PORTDbits.RD2 = 1;
  1132     068C  1508               	bsf	8,2	;volatile
  1133                           
  1134                           ;newmain.c: 47:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1135     068D  3007               	movlw	7
  1136     068E  00F1               	movwf	??_lcd_data+1
  1137     068F  307D               	movlw	125
  1138     0690  00F0               	movwf	??_lcd_data
  1139     0691                     u327:
  1140     0691  0BF0               	decfsz	??_lcd_data,f
  1141     0692  2E91               	goto	u327
  1142     0693  0BF1               	decfsz	??_lcd_data+1,f
  1143     0694  2E91               	goto	u327
  1144     0695                     l655:
  1145                           
  1146                           ;newmain.c: 48:     PORTDbits.RD2 = 0;
  1147     0695  1283               	bcf	3,5	;RP0=0, select bank0
  1148     0696  1303               	bcf	3,6	;RP1=0, select bank0
  1149     0697  1108               	bcf	8,2	;volatile
  1150     0698                     l17:
  1151     0698  0008               	return
  1152     0699                     __end_of_lcd_data:
  1153     007E                     btemp	set	126	;btemp
  1154     007E                     wtemp0	set	126
  1155                           
  1156                           	psect	config
  1157                           
  1158                           ;Config register CONFIG @ 0x2007
  1159                           ;	Oscillator Selection bits
  1160                           ;	FOSC = HS, HS oscillator
  1161                           ;	Watchdog Timer Enable bit
  1162                           ;	WDTE = OFF, WDT disabled
  1163                           ;	Power-up Timer Enable bit
  1164                           ;	PWRTE = OFF, PWRT disabled
  1165                           ;	Brown-out Reset Enable bit
  1166                           ;	BOREN = ON, BOR enabled
  1167                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1168                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1169                           ;	Data EEPROM Memory Code Protection bit
  1170                           ;	CPD = OFF, Data EEPROM code protection off
  1171                           ;	Flash Program Memory Write Enable bits
  1172                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1173                           ;	In-Circuit Debugger Mode bit
  1174                           ;	DEBUG = 0x1, unprogrammed default
  1175                           ;	Flash Program Memory Code Protection bit
  1176                           ;	CP = OFF, Code protection off
  1177     2007                     	org	8199
  1178     2007  3F7A               	dw	16250

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_lcd_coursor
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_command
    _lcd_coursor->_lcd_command
    _keypad->_lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     651
                             _keypad
                        _lcd_coursor
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     2      1     214
                                              3 COMMON     3     2      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_coursor                                          4     0      4     407
                                              3 COMMON     4     0      4
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0      15
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad
     _lcd_data
   _lcd_coursor
     _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 21 08:35:47 2023

                      pc 0002             lcd_data@data 0072                       l20 06AC  
                     l17 0698                       l26 06E0                       l51 0755  
                     l35 06FC                       l60 076F                       l52 074F  
                     l44 06C5                       l71 07A8                       l63 0788  
                     l55 0765                       l47 0745                       l80 07C5  
                     l72 07A2                       l64 0782                       l56 075F  
                     l48 073F                       l83 07DB                       l75 07B8  
                     l67 0798                       l59 0775                       l92 07F5  
                     l84 07D5                       l76 07B2                       l68 0792  
                     l95 07FB                       l87 07EB                       l79 07CB  
                     l88 07E5                       u40 0739                       u41 0738  
                     u50 0745                       u51 0744                       u60 0749  
                     u61 0748                       u70 0755                       u71 0754  
                     u80 0759                       u81 0758                       u90 0765  
                     u91 0764                       fsr 0004                      l701 07AC  
                    l703 07BF                      l705 07CF                      l651 068B  
                    l707 07DF                      l731 06C7                      l653 068C  
                    l709 07EF                      l661 069F                      l741 06E7  
                    l733 06C9                      l655 0695                      l647 0686  
                    l663 06A0                      l743 06EF                      l735 06D6  
                    l751 0703                      l649 068A                      l665 06A9  
                    l657 069A                      l745 06F5                      l737 06DA  
                    l753 0708                      l691 0759                      l659 069E  
                    l739 06E1                      l683 06AD                      l755 0713  
                    l747 06FD                      l693 0769                      l685 0730  
                    l757 071B                      l749 0701                      l695 077C  
                    l687 0739                      l759 0727                      l697 078C  
                    l689 0749                      l699 079C                      u100 0769  
                    u101 0768                      u110 0775                      u111 0774  
                    u200 07BF                      u120 077C                      u201 07BE  
                    u121 077B                      u210 07CB                      u130 0788  
                    u211 07CA                      u131 0787                      u220 07CF  
                    u140 078C                      u300 06F5                      u221 07CE  
                    u141 078B                      u301 06F4                      u230 07DB  
                    u150 0798                      u231 07DA                      u151 0797  
                    u240 07DF                      u160 079C                      u241 07DE  
                    u161 079B                      u250 07EB                      u170 07A8  
                    u251 07EA                      u171 07A7                      u260 07EF  
                    u180 07AC                      u261 07EE                      u181 07AB  
                    u317 06A5                      u270 07FB                      u190 07B8  
                    u327 0691                      u271 07FA                      u191 07B7  
                    u280 06E0                      u281 06DF                      u290 06E7  
                    u291 06E6                      fsr0 0004                     STR_1 0009  
                   _main 06FD                     btemp 007E                     start 0000  
            lcd_string@i 0075              lcd_string@n 0073                    ?_main 0070  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0730  
                 ??_main 0077           lcd_command@cmd 0072         __end_of_lcd_data 0699  
                 _keypad 0730           lcd_coursor@col 0073           lcd_coursor@row 0075  
       ??_lcd_initialise 0073            lcd_string@str 0074  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 06FD                  ?_keypad 0070  
              ?_lcd_data 0070               _lcd_string 06C6               __stringtab 0003  
                __ptext1 06C6                  __ptext2 06AD                  __ptext3 06E1  
                __ptext4 0699                  __ptext5 0730                  __ptext6 0685  
             ??_lcd_data 0070     end_of_initialization 07FC                _PORTBbits 0006  
              _PORTDbits 0008              ?_lcd_string 0073            ??_lcd_command 0070  
          ??_lcd_coursor 0077           __end_of_keypad 07FC      start_initialization 07FC  
    __end_of_lcd_command 06AD      __end_of_lcd_coursor 06FD                 ??_keypad 0073  
              ___latbits 0002                __pstrings 0003              _lcd_command 0699  
            _lcd_coursor 06E1              __stringbase 0008             ??_lcd_string 0074  
     __end_of_lcd_string 06E1       __end_of__stringtab 0009                 _lcd_data 0685  
         _lcd_initialise 06AD   __end_of_lcd_initialise 06C6                stringcode 0003  
               stringdir 0003                 stringtab 0003          ?_lcd_initialise 0070  
           ?_lcd_command 0070             ?_lcd_coursor 0073  
