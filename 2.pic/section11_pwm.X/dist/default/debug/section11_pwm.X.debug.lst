

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Dec 30 20:54:46 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166                           
   167                           	psect	nvCOMMON
   168     0076                     __pnvCOMMON:
   169     0076                     _i:
   170     0076                     	ds	2
   171     0012                     _T2CON	set	18
   172     0017                     _CCP1CON	set	23
   173     0015                     _CCPR1L	set	21
   174     0092                     _PR2	set	146
   175     0087                     _TRISC	set	135
   176                           
   177                           	psect	cinit
   178     07FC                     start_initialization:	
   179                           ; #config settings
   180                           
   181     07FC                     __initialization:
   182     07FC                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185     07FC                     __end_of__initialization:
   186     07FC  0183               	clrf	3
   187     07FD  120A  118A  2FC6   	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	cstackCOMMON
   190     0070                     __pcstackCOMMON:
   191     0070                     ?_setPWMdutycycle:
   192     0070                     ?_main:	
   193                           ; 1 bytes @ 0x0
   194                           
   195     0070                     setPWMdutycycle@duty:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 2 bytes @ 0x0
   200     0070                     	ds	2
   201     0072                     ??_setPWMdutycycle:
   202                           
   203                           ; 1 bytes @ 0x2
   204     0072                     	ds	2
   205     0074                     ??_main:
   206                           
   207                           ; 1 bytes @ 0x4
   208     0074                     	ds	2
   209                           
   210                           	psect	maintext
   211     07C6                     __pmaintext:	
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 36 in file "main.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2, status,0, pclath, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : B00/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   231 ;;      Params:         0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0
   233 ;;      Temps:          2       0       0       0       0
   234 ;;      Totals:         2       0       0       0       0
   235 ;;Total ram usage:        2 bytes
   236 ;; Hardware stack levels required when called: 1
   237 ;; This function calls:
   238 ;;		_setPWMdutycycle
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244     07C6                     _main:	
   245                           ;psect for function _main
   246                           
   247     07C6                     l603:	
   248                           ;incstack = 0
   249                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   250                           
   251                           
   252                           ;main.c: 37:     TRISC = 0x00;
   253     07C6  1683               	bsf	3,5	;RP0=1, select bank1
   254     07C7  1303               	bcf	3,6	;RP1=0, select bank1
   255     07C8  0187               	clrf	7	;volatile
   256     07C9                     l605:
   257                           
   258                           ;main.c: 38:     CCP1CON = 0x0C;
   259     07C9  300C               	movlw	12
   260     07CA  1283               	bcf	3,5	;RP0=0, select bank0
   261     07CB  1303               	bcf	3,6	;RP1=0, select bank0
   262     07CC  0097               	movwf	23	;volatile
   263     07CD                     l607:
   264                           
   265                           ;main.c: 39:     PR2 = 0xFF;
   266     07CD  30FF               	movlw	255
   267     07CE  1683               	bsf	3,5	;RP0=1, select bank1
   268     07CF  1303               	bcf	3,6	;RP1=0, select bank1
   269     07D0  0092               	movwf	18	;volatile
   270     07D1                     l609:
   271                           
   272                           ;main.c: 40:     T2CON = 0x04;
   273     07D1  3004               	movlw	4
   274     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   275     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   276     07D4  0092               	movwf	18	;volatile
   277     07D5                     l611:
   278                           
   279                           ;main.c: 42:         for(i = 0; i< 1023; i++){
   280     07D5  01F6               	clrf	_i
   281     07D6  01F7               	clrf	_i+1
   282     07D7                     l615:
   283                           
   284                           ;main.c: 43:             setPWMdutycycle(i);
   285     07D7  0877               	movf	_i+1,w
   286     07D8  00F1               	movwf	setPWMdutycycle@duty+1
   287     07D9  0876               	movf	_i,w
   288     07DA  00F0               	movwf	setPWMdutycycle@duty
   289     07DB  120A  118A  27A7  120A  118A  	fcall	_setPWMdutycycle
   290     07E0                     l617:
   291                           
   292                           ;main.c: 44:             _delay((unsigned long)((2)*(20000000/4000.0)));
   293     07E0  300D               	movlw	13
   294     07E1  00F5               	movwf	??_main+1
   295     07E2  30FB               	movlw	251
   296     07E3  00F4               	movwf	??_main
   297     07E4                     u57:
   298     07E4  0BF4               	decfsz	??_main,f
   299     07E5  2FE4               	goto	u57
   300     07E6  0BF5               	decfsz	??_main+1,f
   301     07E7  2FE4               	goto	u57
   302     07E8  2FE9               	nop2
   303     07E9                     l619:
   304                           
   305                           ;main.c: 45:         }
   306     07E9  3001               	movlw	1
   307     07EA  07F6               	addwf	_i,f
   308     07EB  1803               	skipnc
   309     07EC  0AF7               	incf	_i+1,f
   310     07ED  3000               	movlw	0
   311     07EE  07F7               	addwf	_i+1,f
   312     07EF                     l621:
   313     07EF  3003               	movlw	3
   314     07F0  0277               	subwf	_i+1,w
   315     07F1  30FF               	movlw	255
   316     07F2  1903               	skipnz
   317     07F3  0276               	subwf	_i,w
   318     07F4  1C03               	skipc
   319     07F5  2FF7               	goto	u41
   320     07F6  2FF8               	goto	u40
   321     07F7                     u41:
   322     07F7  2FD7               	goto	l615
   323     07F8                     u40:
   324     07F8  2FD5               	goto	l611
   325     07F9  120A  118A  2800   	ljmp	start
   326     07FC                     __end_of_main:
   327                           
   328                           	psect	text1
   329     07A7                     __ptext1:	
   330 ;; *************** function _setPWMdutycycle *****************
   331 ;; Defined at:
   332 ;;		line 28 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;  duty            2    0[COMMON] unsigned int 
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         2       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0
   348 ;;      Temps:          2       0       0       0       0
   349 ;;      Totals:         4       0       0       0       0
   350 ;;Total ram usage:        4 bytes
   351 ;; Hardware stack levels used: 1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     07A7                     _setPWMdutycycle:	
   360                           ;psect for function _setPWMdutycycle
   361                           
   362     07A7                     l597:	
   363                           ;incstack = 0
   364                           ; Regs used in _setPWMdutycycle: [wreg+status,2+status,0]
   365                           
   366                           
   367                           ;main.c: 29:     CCPR1L = duty>>2;
   368     07A7  0871               	movf	setPWMdutycycle@duty+1,w
   369     07A8  00F3               	movwf	??_setPWMdutycycle+1
   370     07A9  0870               	movf	setPWMdutycycle@duty,w
   371     07AA  00F2               	movwf	??_setPWMdutycycle
   372     07AB  1003               	clrc
   373     07AC  0CF3               	rrf	??_setPWMdutycycle+1,f
   374     07AD  0CF2               	rrf	??_setPWMdutycycle,f
   375     07AE  1003               	clrc
   376     07AF  0CF3               	rrf	??_setPWMdutycycle+1,f
   377     07B0  0CF2               	rrf	??_setPWMdutycycle,f
   378     07B1  0872               	movf	??_setPWMdutycycle,w
   379     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   380     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   381     07B4  0095               	movwf	21	;volatile
   382     07B5                     l599:
   383                           
   384                           ;main.c: 30:     CCP1CON = CCP1CON & 0xCF;
   385     07B5  0817               	movf	23,w	;volatile
   386     07B6  39CF               	andlw	207
   387     07B7  0097               	movwf	23	;volatile
   388     07B8                     l601:
   389                           
   390                           ;main.c: 31:     CCP1CON = CCP1CON & (0x30 & (duty << 4));
   391     07B8  0870               	movf	setPWMdutycycle@duty,w
   392     07B9  00F2               	movwf	??_setPWMdutycycle
   393     07BA  3003               	movlw	3
   394     07BB                     u35:
   395     07BB  1003               	clrc
   396     07BC  0DF2               	rlf	??_setPWMdutycycle,f
   397     07BD  3EFF               	addlw	-1
   398     07BE  1D03               	skipz
   399     07BF  2FBB               	goto	u35
   400     07C0  1003               	clrc
   401     07C1  0D72               	rlf	??_setPWMdutycycle,w
   402     07C2  0517               	andwf	23,w	;volatile
   403     07C3  3930               	andlw	48
   404     07C4  0097               	movwf	23	;volatile
   405     07C5                     l15:
   406     07C5  0008               	return
   407     07C6                     __end_of_setPWMdutycycle:
   408     007E                     btemp	set	126	;btemp
   409     007E                     wtemp0	set	126
   410                           
   411                           	psect	config
   412                           
   413                           ;Config register CONFIG @ 0x2007
   414                           ;	Oscillator Selection bits
   415                           ;	FOSC = HS, HS oscillator
   416                           ;	Watchdog Timer Enable bit
   417                           ;	WDTE = OFF, WDT disabled
   418                           ;	Power-up Timer Enable bit
   419                           ;	PWRTE = OFF, PWRT disabled
   420                           ;	Brown-out Reset Enable bit
   421                           ;	BOREN = ON, BOR enabled
   422                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   423                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   424                           ;	Data EEPROM Memory Code Protection bit
   425                           ;	CPD = OFF, Data EEPROM code protection off
   426                           ;	Flash Program Memory Write Enable bits
   427                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   428                           ;	In-Circuit Debugger Mode bit
   429                           ;	DEBUG = 0x1, unprogrammed default
   430                           ;	Flash Program Memory Code Protection bit
   431                           ;	CP = OFF, Code protection off
   432     2007                     	org	8199
   433     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setPWMdutycycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     120
                                              4 COMMON     2     2      0
                    _setPWMdutycycle
 ---------------------------------------------------------------------------------
 (1) _setPWMdutycycle                                      4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setPWMdutycycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Dec 30 20:54:46 2023

                      _i 0076                       l15 07C5                       u40 07F8  
                     u41 07F7                       u35 07BB                       u57 07E4  
                    l601 07B8                      l611 07D5                      l603 07C6  
                    l621 07EF                      l605 07C9                      l615 07D7  
                    l607 07CD                      l617 07E0                      l609 07D1  
                    l619 07E9                      l597 07A7                      l599 07B5  
                    _PR2 0092                     _main 07C6                     btemp 007E  
                   start 0000                    ?_main 0070                    _T2CON 0012  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FC         ?_setPWMdutycycle 0070             __end_of_main 07FC  
                 ??_main 0074                   _CCPR1L 0015  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pnvCOMMON 0076               __pmaintext 07C6  
                _CCP1CON 0017                  __ptext1 07A7     end_of_initialization 07FC  
    start_initialization 07FC      setPWMdutycycle@duty 0070                ___latbits 0002  
      ??_setPWMdutycycle 0072          _setPWMdutycycle 07A7  __end_of_setPWMdutycycle 07C6  
