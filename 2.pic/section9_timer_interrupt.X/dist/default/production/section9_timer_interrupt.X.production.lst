

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Dec 23 21:34:51 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0006                     _PORTBbits	set	6
   168     0001                     _TMR0	set	1
   169     000B                     _INTCONbits	set	11
   170     0081                     _OPTION_REGbits	set	129
   171     0430                     _TRISB0	set	1072
   172                           
   173                           	psect	cinit
   174     0011                     start_initialization:	
   175                           ; #config settings
   176                           
   177     0011                     __initialization:
   178                           
   179                           ; Clear objects allocated to COMMON
   180     0011  01F3               	clrf	__pbssCOMMON& (0+127)
   181     0012                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     0012                     __end_of__initialization:
   185     0012  0183               	clrf	3
   186     0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMMON
   189     0073                     __pbssCOMMON:
   190     0073                     _timer_counter:
   191     0073                     	ds	1
   192                           
   193                           	psect	cstackCOMMON
   194     0070                     __pcstackCOMMON:
   195     0070                     ?_setup_timer0:
   196     0070                     ??_setup_timer0:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0070                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202                           
   203                           ; 1 bytes @ 0x0
   204     0070                     	ds	3
   205     0073                     ??_main:
   206                           
   207                           	psect	maintext
   208     0016                     __pmaintext:	
   209                           ; 1 bytes @ 0x3
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 39 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called: 1
   235 ;; This function calls:
   236 ;;		Nothing
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242     0016                     _main:	
   243                           ;psect for function _main
   244                           
   245     0016                     l627:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg+status,2+status,0]
   248                           
   249                           
   250                           ;main.c: 42: INTCONbits.GIE = 1;
   251     0016  178B               	bsf	11,7	;volatile
   252                           
   253                           ;main.c: 43: INTCONbits.PEIE = 1;
   254     0017  170B               	bsf	11,6	;volatile
   255                           
   256                           ;main.c: 44: INTCONbits.TMR0IE = 1;
   257     0018  168B               	bsf	11,5	;volatile
   258                           
   259                           ;main.c: 46: OPTION_REGbits.INTEDG = 0;
   260     0019  1683               	bsf	3,5	;RP0=1, select bank1
   261     001A  1303               	bcf	3,6	;RP1=0, select bank1
   262     001B  1301               	bcf	1,6	;volatile
   263                           
   264                           ;main.c: 49: OPTION_REGbits.T0CS = 0;
   265     001C  1281               	bcf	1,5	;volatile
   266                           
   267                           ;main.c: 50: OPTION_REGbits.PSA = 0;
   268     001D  1181               	bcf	1,3	;volatile
   269                           
   270                           ;main.c: 52: OPTION_REGbits.PS2 = 1;
   271     001E  1501               	bsf	1,2	;volatile
   272                           
   273                           ;main.c: 53: OPTION_REGbits.PS1 = 1;
   274     001F  1481               	bsf	1,1	;volatile
   275                           
   276                           ;main.c: 54: OPTION_REGbits.PS0 = 1;
   277     0020  1401               	bsf	1,0	;volatile
   278     0021                     l629:
   279                           
   280                           ;main.c: 56: TMR0 = 59;
   281     0021  303B               	movlw	59
   282     0022  1283               	bcf	3,5	;RP0=0, select bank0
   283     0023  1303               	bcf	3,6	;RP1=0, select bank0
   284     0024  0081               	movwf	1	;volatile
   285     0025                     l631:
   286                           
   287                           ;main.c: 57: TRISB0 = 0;
   288     0025  1683               	bsf	3,5	;RP0=1, select bank1
   289     0026  1303               	bcf	3,6	;RP1=0, select bank1
   290     0027  1006               	bcf	6,0	;volatile
   291     0028                     l633:
   292                           
   293                           ;main.c: 59: if(timer_counter == 0){
   294     0028  0873               	movf	_timer_counter,w
   295     0029  1D03               	btfss	3,2
   296     002A  282C               	goto	u21
   297     002B  282D               	goto	u20
   298     002C                     u21:
   299     002C  2830               	goto	l637
   300     002D                     u20:
   301     002D                     l635:
   302                           
   303                           ;main.c: 60: PORTBbits.RB0 = 1;
   304     002D  1283               	bcf	3,5	;RP0=0, select bank0
   305     002E  1303               	bcf	3,6	;RP1=0, select bank0
   306     002F  1406               	bsf	6,0	;volatile
   307     0030                     l637:
   308                           
   309                           ;main.c: 61: };main.c: 62: if(timer_counter == 50){
   310     0030  3032               	movlw	50
   311     0031  0673               	xorwf	_timer_counter,w
   312     0032  1D03               	btfss	3,2
   313     0033  2835               	goto	u31
   314     0034  2836               	goto	u30
   315     0035                     u31:
   316     0035  2839               	goto	l641
   317     0036                     u30:
   318     0036                     l639:
   319                           
   320                           ;main.c: 63: PORTBbits.RB0 = 0;
   321     0036  1283               	bcf	3,5	;RP0=0, select bank0
   322     0037  1303               	bcf	3,6	;RP1=0, select bank0
   323     0038  1006               	bcf	6,0	;volatile
   324     0039                     l641:
   325                           
   326                           ;main.c: 64: };main.c: 65: if(timer_counter == 200){
   327     0039  30C8               	movlw	200
   328     003A  0673               	xorwf	_timer_counter,w
   329     003B  1D03               	btfss	3,2
   330     003C  283E               	goto	u41
   331     003D  283F               	goto	u40
   332     003E                     u41:
   333     003E  2828               	goto	l633
   334     003F                     u40:
   335     003F                     l643:
   336                           
   337                           ;main.c: 66: timer_counter = 0;
   338     003F  01F3               	clrf	_timer_counter
   339     0040  2828               	goto	l633
   340     0041  120A  118A  280E   	ljmp	start
   341     0044                     __end_of_main:
   342                           
   343                           	psect	text1
   344     0044                     __ptext1:	
   345 ;; *************** function _setup_timer0 *****************
   346 ;; Defined at:
   347 ;;		line 31 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, btemp+1
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0
   363 ;;      Temps:          3       0       0       0       0
   364 ;;      Totals:         3       0       0       0       0
   365 ;;Total ram usage:        3 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		Interrupt level 1
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374     0044                     _setup_timer0:	
   375                           ;psect for function _setup_timer0
   376                           
   377     0044                     i1l621:
   378                           
   379                           ;main.c: 32: if(INTCONbits.TMR0IF == 1){
   380     0044  1D0B               	btfss	11,2	;volatile
   381     0045  2847               	goto	u1_21
   382     0046  2848               	goto	u1_20
   383     0047                     u1_21:
   384     0047  284D               	goto	i1l18
   385     0048                     u1_20:
   386     0048                     i1l623:
   387                           
   388                           ;main.c: 33: timer_counter++;
   389     0048  3001               	movlw	1
   390     0049  00FF               	movwf	btemp+1
   391     004A  087F               	movf	btemp+1,w
   392     004B  07F3               	addwf	_timer_counter,f
   393     004C                     i1l625:
   394                           
   395                           ;main.c: 34: INTCONbits.TMR0IF = 0;
   396     004C  110B               	bcf	11,2	;volatile
   397     004D                     i1l18:
   398     004D  0872               	movf	??_setup_timer0+2,w
   399     004E  00FF               	movwf	btemp+1
   400     004F  0871               	movf	??_setup_timer0+1,w
   401     0050  008A               	movwf	10
   402     0051  0E70               	swapf	??_setup_timer0,w
   403     0052  0083               	movwf	3
   404     0053  0EFE               	swapf	btemp,f
   405     0054  0E7E               	swapf	btemp,w
   406     0055  0009               	retfie
   407     0056                     __end_of_setup_timer0:
   408     007E                     btemp	set	126	;btemp
   409     007E                     wtemp0	set	126
   410                           
   411                           	psect	intentry
   412     0004                     __pintentry:	
   413                           ;incstack = 0
   414                           ; Regs used in _setup_timer0: [wreg+status,2+status,0+btemp+1]
   415                           
   416     0004                     interrupt_function:
   417     007E                     saved_w	set	btemp
   418     0004  00FE               	movwf	btemp
   419     0005  0E03               	swapf	3,w
   420     0006  00F0               	movwf	??_setup_timer0
   421     0007  080A               	movf	10,w
   422     0008  00F1               	movwf	??_setup_timer0+1
   423     0009  087F               	movf	btemp+1,w
   424     000A  00F2               	movwf	??_setup_timer0+2
   425     000B  120A  118A  2844   	ljmp	_setup_timer0
   426                           
   427                           	psect	config
   428                           
   429                           ;Config register CONFIG @ 0x2007
   430                           ;	Oscillator Selection bits
   431                           ;	FOSC = HS, HS oscillator
   432                           ;	Watchdog Timer Enable bit
   433                           ;	WDTE = OFF, WDT disabled
   434                           ;	Power-up Timer Enable bit
   435                           ;	PWRTE = OFF, PWRT disabled
   436                           ;	Brown-out Reset Enable bit
   437                           ;	BOREN = ON, BOR enabled
   438                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   439                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   440                           ;	Data EEPROM Memory Code Protection bit
   441                           ;	CPD = OFF, Data EEPROM code protection off
   442                           ;	Flash Program Memory Write Enable bits
   443                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   444                           ;	In-Circuit Debugger Mode bit
   445                           ;	DEBUG = 0x1, unprogrammed default
   446                           ;	Flash Program Memory Code Protection bit
   447                           ;	CP = OFF, Code protection off
   448     2007                     	org	8199
   449     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _setup_timer0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _setup_timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _setup_timer0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _setup_timer0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _setup_timer0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _setup_timer0                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _setup_timer0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Dec 23 21:34:51 2023

                     u20 002D                       u21 002C                       u30 0036  
                     u31 0035                       u40 003F                       u41 003E  
                    l631 0025                      l641 0039                      l633 0028  
                    l643 003F                      l635 002D                      l627 0016  
                    l637 0030                      l629 0021                      l639 0036  
                   i1l18 004D                     _TMR0 0001                     u1_20 0048  
                   u1_21 0047                     _main 0016                     btemp 007E  
                   start 000E                    ?_main 0070                    i1l621 0044  
                  i1l623 0048                    i1l625 004C                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0044                   ??_main 0073                   _TRISB0 0430  
                 saved_w 007E  __end_of__initialization 0012           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 0016               __pintentry 0004  
                __ptext1 0044     end_of_initialization 0012                _PORTBbits 0006  
          ?_setup_timer0 0070           ??_setup_timer0 0070      start_initialization 0011  
            __pbssCOMMON 0073                ___latbits 0002        interrupt_function 0004  
   __end_of_setup_timer0 0056            _timer_counter 0073               _INTCONbits 000B  
               intlevel1 0000             _setup_timer0 0044  
